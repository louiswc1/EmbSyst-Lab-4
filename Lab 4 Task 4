//=====[Libraries]=============================================================

#include "mbed.h"
#include "arm_book_lib.h"

//=====[Defines]===============================================================

#define NUMBER_OF_KEYS 4
#define OVER_TEMP_LEVEL 50

//=====[Declaration and initialization of public global objects]===============

DigitalIn enterButton(BUTTON1); 
DigitalIn mq2(PE_12);           

DigitalOut alarmLed(LED1);      

UnbufferedSerial uartUsb(USBTX, USBRX, 115200); 

AnalogIn potentiometer(A0);      
AnalogIn lm35(A1);              

//=====[Declaration and initialization of public global variables]=============

bool gasDetectorState = OFF;   // Gas detection state
float potentiometerReading = 0.0;  // Potentiometer reading
float lm35TempC = 0.0;            // Temperature in Celsius

//=====[Function Declarations]=================================================

float analogReadingScaledWithTheLM35Formula(float analogReading);  
void sendFloat(UnbufferedSerial &uart, float value);               
void sendMessage();                                                

//=====[Main function]=========================================================

int main()
{
    while (true) {
        //reads temperature sensor and scale it to degrees Celsius
        lm35TempC = analogReadingScaledWithTheLM35Formula(lm35.read());
        
        //reads potentiometer value (0.0 to 1.0)
        potentiometerReading = potentiometer.read();
        
        //check if gas is detected (MQ2 sensor logic)
        gasDetectorState = !mq2;

        //send all the sensor readings to serial terminal
        sendMessage();

        //check if temperature exceeds the threshold and trigger alarm
        if (lm35TempC > OVER_TEMP_LEVEL) {
            uartUsb.write("Alarm triggered by over temp\r\n", 30);
        } 
        //check if gas is detected and trigger alarm
        else if (gasDetectorState) {
            uartUsb.write("Alarm triggered by gas\r\n", 24);
        }

        //1 second delay
        ThisThread::sleep_for(1s);
    }
}

//=====[Function Implementations]==============================================

float analogReadingScaledWithTheLM35Formula(float analogReading)
{
    return (analogReading * 3.3 / 0.01); 
}


void sendFloat(UnbufferedSerial &uart, float value)
{
    char buffer[10];
    int intPart = (int)value;                       
    int decimalPart = (int)((value - intPart) * 100);
    
    //format the float manually 
    buffer[0] = '0' + intPart / 10;
    buffer[1] = '0' + intPart % 10;
    buffer[2] = '.';
    buffer[3] = '0' + decimalPart / 10;
    buffer[4] = '0' + decimalPart % 10;
    uart.write(buffer, 5);  //send formatted string
}

//send all sensor readings to serial terminal
void sendMessage()
{
    uartUsb.write("The temperature is ", 20);
    sendFloat(uartUsb, lm35TempC);   //temperature
    uartUsb.write(" Â°C, potentiometer reading ", 28);
    sendFloat(uartUsb, potentiometerReading); //potentiometer reading
    uartUsb.write(", Gas: ", 7);

    //send gas detection status
    if (gasDetectorState) {
        uartUsb.write("Gas detected!\r\n", 15);
    } else {
        uartUsb.write("No gas detected.\r\n", 18);
    }
}
